#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
La storia dei sistemi operativi in ambito mobile
\end_layout

\begin_layout Author
Mirco Babini
\end_layout

\begin_layout Date
25 dicembre 2013
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduzione
\end_layout

\begin_layout Subsection
Tecnologia abilitante e la prima telefonata 
\begin_inset Quotes eld
\end_inset

handheld
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Da quando Internet è approdato sui telefoni cellulari diventando il principale
 punto di accesso alle funzionalità più diffuse e utilizzate su ogni tipologia
 di device mobile, si è diffusa anche la nuova terminologia 
\begin_inset Quotes eld
\end_inset

smartphone
\begin_inset Quotes erd
\end_inset

, per definire quello che fino a dieci o quindici anni fa non era altro
 che un 
\emph on
relativamente
\emph default
 comodo telefono cellulare portatile.
\end_layout

\begin_layout Standard
Per poter osservare l'evolzione dei device mobili e delle funzionalità che
 questi mettono a disposizione, è fondamentale considerare come nasce e
 come si sviluppa la necessità di dispositivi più o meno tascabili fin dai
 primi anni del 1900.
\end_layout

\begin_layout Standard
Secondo alcune fonti che associano erroneamente la definizione di 
\begin_inset Quotes eld
\end_inset

wireless telephone
\begin_inset Quotes erd
\end_inset

 a quella che abbiamo imparato a conoscere quando si parla di telefono senza
 fili, a partire dalla seconda metà degli anni '90, pare che il primo esemplare
 di telefono cellulare sia quello utilizzato nel film muto della 
\emph on
British Pathé
\emph default
 
\emph on
company
\emph default
 denominato 
\emph on
Eve's Wireless
\emph default
, anno 1922.
 In realtà, considerato l'anno di produzione e il fatto che non è difficile
 mal interpretare un 
\begin_inset Quotes eld
\end_inset

corto
\begin_inset Quotes erd
\end_inset

 muto, alcuni critici osservatori obiettano che si tratti di una semplice
 radio mono direzionale portatile, del tutto analoga a quella nell'immagine
 pubblicata il 20 Febbraio 2910 dal noto quotidiano statunitense 
\emph on
The Whashington Post
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename assets/eves-wireless.jpg
	width 100text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Una scena tratta dal corto 
\emph on
Eve's Wireless; British Pathé, 1922.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nonostante, quindi, non sia lecito attribuire all’evento suddetto la nascita
 della telefonia mobile secondo l’interpretazione attuale del termine, risulta
 eviente come già dagli albori del ventesimo secolo l’interesse comune fosse
 orientato verso una qualche forma di dispositivo di comunicazione mobile
 e portabile.
\end_layout

\begin_layout Paragraph
Reti di telefonia mobile
\end_layout

\begin_layout Standard
Per poter parlare di telefonia mobile per quella che è l’accezione comune
 del secolo corrente, è necessario introdurre il concetto di rete cellulare,
 il cui antenato è stato diffuso a partire dal 1947 dalla 
\emph on
AT&T
\emph default
, denominato 
\emph on
MTS
\emph default
 (Mobile Telephone Service).
 Si trattava, sostanzialmente, di un servizio a disposizione di circa cinquemila
 clienti i quali, una volta che una conversazione era stata istanziata manualmen
te grazie all’intervento di un operatore, dovevano premere un bottone per
 parlare e rilasciarlo per ascoltare, analogamente ad una ricetrasmittente.
\end_layout

\begin_layout Standard
Nello stesso anno, due ingegneri della 
\emph on
Bell Labs
\emph default
, propongono una tecnologia (hexagonal cells) per rendere possibile la fruizione
 di un servizio di telefonia mobile grazie all’installazione di dispositivi
 dedicati sui veicoli.
 A causa della precocità dell’idea e della scarsa tecnologia a disposizione,
 il primo sistema completamente automatizzato del tipo appena descritto
 vedrà la luce solamente nel 1956 in Svezia, grazie anche al prezioso contributo
 di Marconi e della nota multinazionale svedese 
\emph on
Ericcson
\emph default
.
\end_layout

\begin_layout Standard
Negli anni a seguire la tecnologia viene sviluppata e potenziata, al punto
 che a partire dalla seconda metà degli anni ‘60 e fino ai primi anni ‘70
 vedono la luce le prime reti di telefoniza mobile pubbliche degne di nota
 per via del loro discreto successo commerciale, come l’
\emph on
ARP
\emph default
 in Finlandia, diffusa a partire dal 1971.
\end_layout

\begin_layout Paragraph
La prima telefonata 
\begin_inset Quotes eld
\end_inset

handheld
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Definita l’
\emph on
ARP
\emph default
 come il primo vero padre delle reti cellulari (0G, zero-generation), attribuiam
o la nascita del primo telefono cellulare veramente portatile alla ormai
 defunta multinazionale 
\emph on
Motorola
\emph default
, quando il ricercatore Martin Cooper effettua la prima telefonata da un
 apparecchio mobile “haldhold” alla 
\emph on
Bell Labs
\emph default
, il 3 Aprile 1973.
 Nello stesso anno, Norvegia e Gran Bretagna si uniscono alla rete 
\emph on
ARPANET
\emph default
 la quale, allora, connetteva tra loro 23 nazioni con un computer ciascuno.
\end_layout

\begin_layout Standard
In quegli anni la vastissima possibilità di sviluppo di una tecnologia mobile
 di una natura simile a quella nota a noi oggi erano del tutto ignote e
 difficilmente auspicabili, considerando che molte delle tecnologia che
 hanno reso il telefono lo strumento indispensabile per ognuno di noi erano
 ancora solo un’idea lontana o, al più, ai primi anni della loro vita (le
 tecnologie su cui si basa l’Internet odierno, ad esempio, hanno visto l’inizio
 della loro diffusione a livello globale 
\emph on
solamente
\emph default
 a partire dagli anni ottanta).
 
\end_layout

\begin_layout Subsection
Il panorama e l'ecosistema
\end_layout

\begin_layout Standard
Anche a livello di architetture software era presto per parlare di sistemi
 operativi; i primi dispositivi, infatti, venivano definiti sistemi embedded,
 ossia sistemi di elaborazione a microprocessore/microcontrollore dedicati,
 quindi progettati per una specifica applicazione, quasi sempre sulla base
 di una piattaforma hardware anch'essa completamente dedicata.
 Il software incaricato della gestione dell’intero sistema viene definitivo
 sistema operativo embedded (embedded OS) ed è basato su architettura microkerne
l.
\end_layout

\begin_layout Standard
I sistemi operativi embedded sono sistemi di calcolo ad uso non generico,
 pertanto il loro utilizzo spazia dai computer industriali dedicati al controllo
 di processo ai sistemi per la domotica, passando per apparecchiature biomedical
i, decoder per la TV digitale, console per videogiochi e altre tipologie
 di dispositivi più o meno complessi.
 Naturalmente la complessità dell’architettura sottostante varia a seconda
 del campo di utilizzo del dispositivo stesso.
\end_layout

\begin_layout Paragraph
Il panorama hardware/hoftware
\end_layout

\begin_layout Standard
Grazie a questa grande adattabilità pressoché ad ogni tipologia di dispositivo,
 i sistemi operativi embedded sono stati largamente utilizzati anche sui
 diffusissimi PDA e, facendo riferimento all’ambito dei telefoni cellulari,
 hanno visto la loro massima applicazione supportando i sistemi 
\emph on
Windows CE
\emph default
 (Compact Embedded, basato su architettura a kernel monolitico) e 
\emph on
Symbian OS
\emph default
, che andremo ad approfondire nella sezione 2.1.
\end_layout

\begin_layout Standard
Sebbene questi due sistemi, nelle loro versioni ed evoluzioni, abbiano segnato
 in maniera indelebile tutto il percorso caratterizzante la storia dei sistemi
 operativi in ambito mobile, è solo dopo circa una decade rispetto alla
 loro nascita che si è visto lo sviluppo di sistemi basati su architetture
 software simili ma molto più sviluppate, come ad esempio 
\emph on
Android
\emph default
 con kernel Linux, il più noto kernel monolitico degli ultimi vent’anni
 (creato nel 1991 da Linus Torvalds).
 Pochi anni dopo che 
\emph on
Android
\emph default
 vide la luce, nacque 
\emph on
MeeGo
\emph default
, un sistema operativo open-source basato anch’esso su kernel monolitico
 Linux, molto versatile e disponibile sia per piattaforme 
\emph on
ARM
\emph default
 che 
\emph on
x86
\emph default
.
\end_layout

\begin_layout Standard
Nello stesso anno nasce anche 
\emph on
Bada
\emph default
, piattaforma sviluppata su kernel ibrido, ossia un microkernel con codice
 che dovrebbe trovarsi ad un livello maggiore dello stack ma che viene inserito
 a livello kernel per una questione di performance.
\end_layout

\begin_layout Standard
Questa filosofia era già stata adottata dalla società fondata nel 1983 da
 Steve Jobs, la 
\emph on
NEXT Computers
\emph default
, nello sviluppo di un kernel ibrido denominato 
\emph on
XNU
\emph default
, acquisito poi dalla 
\emph on
Apple Inc.

\emph default
 e alla base di 
\emph on
Darwin
\emph default
, sul quale sono stati sviluppati sia 
\emph on
Mac OS X
\emph default
 che 
\emph on
iOS
\emph default
, pochi anni prima della nascita di 
\emph on
Bada
\emph default
.
\end_layout

\begin_layout Standard
Anche in casa 
\emph on
Microsoft
\emph default
 viene adottata l’architettura a kernel ibrido nello sviluppo di 
\emph on
NT Kernel
\emph default
, alla base della maggior parte delle versioni di 
\emph on
Windows
\emph default
 per desktop e dell’oggi noto 
\emph on
Windows Phone 8
\emph default
.
\end_layout

\begin_layout Standard
Molti di questi sistemi operativi, per dare vita a tutto l’ecosistema che
 li ha resi così fruibili da arrivare nelle tasche di ciascuno di noi, hanno
 adottato una tecnologia denominata 
\emph on
middleware
\emph default
, che si interpone tra il kernel e il livello applicativo, fornendo un comodo
 supporto allo sviluppo di applicazioni per queste tipologie di dispositivi
 (citiamo 
\emph on
Mer
\emph default
, importante middleware open-source sviluppato dalle ceneri di 
\emph on
MeeGo
\emph default
, per sistemi operativi basati su kernel Linux).
 
\end_layout

\begin_layout Section
Dai Palmari/Embedded Systems ai Mobile OSs
\end_layout

\begin_layout Subsection
1996-1997 - Handheld-able systems
\end_layout

\begin_layout Paragraph*
Windows CE 1.0
\end_layout

\begin_layout Standard
A pochissimi mesi di distanza dalla prima test release di 
\emph on
Windows 95
\emph default
 (Gennaio 1995), in casa 
\emph on
Microsoft
\emph default
 il team 
\emph on
Pegasus
\emph default
 inizia a lavorare su un sistema operativo completamente nuovo, abbracciando
 nuove tecnologia che già bollivano in pentola da qualche tempo.
\end_layout

\begin_layout Standard
Il 16 Novembre 1996 viene rilasciata la prima versione (1.0) di 
\emph on
Windows CE
\emph default
, denominata Pegasus, un sistema operativo a kernel monolitico per PDA (Personal
 Digital Assistants), anche detti Handheld PCs (H/PC) su un supporto della
 
\emph on
Hewlett-Packard
\emph default
, l’
\emph on
HP 300LX
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename assets/pegasus-logo.gif
	width 50text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Microsoft Windows 
\emph on
Pegasus
\emph default
 CE 1.0
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Questo nuovo sistema era perlopiù Windows-like sia nell’interfaccia grafica
 che nell’usabilità, per poter essere di più semplice utilizzo possibile
 per chi già fosse abituato con l’ormai celebre 
\emph on
Windows 95
\emph default
; alcune delle adozioni tecnologiche di questo sistema operativo sono tuttora
 utilizzate e diffusissime, come ad esempio il supporto a Unicode, oppure
 gli eseguibili e le librerie rispettivamente in formato .exe e .dll e, non
 da meno, l’architettura a 32-bit anziché 16-, nell’ottica di idee che la
 nuova piattaforma potesse essere utilizzata da chiunque per ogni esigenza
 ovunque nel mondo, grazie all’adattabilità ad ogni idioma.
\end_layout

\begin_layout Standard
La prima versione di 
\emph on
Windows CE
\emph default
 possedeva alcune interessanti peculiarità: supporto touch screen (su display
 640x240px), requisiti minimi pari a 4MB di ROM, solo 2MB di RAM e un processore
 tra il 
\emph on
Super H3
\emph default
 e il 
\emph on
MIPS3000/4000
\emph default
.
 Purtroppo, in questa prima fase, il sistema non era disponibile separatamente
 dall’hardware e la scelta, in termini di produttori, era tutt’altro che
 vasta.
\end_layout

\begin_layout Standard
Per assolvere alle funzioni di scambio dati tra i 
\emph on
desktop computers
\emph default
 e questi modelli di PDA, 
\emph on
Windows CE 1.0
\emph default
 era munito di un software denominato 
\emph on
Pegasus Manager
\emph default
, rilasciato poi con la denominazione ereditata 
\emph on
Handheld PC (H/PC) Explorer
\emph default
.
\end_layout

\begin_layout Paragraph
Palm OS
\end_layout

\begin_layout Standard
Prima che Microsoft abbracciasse il mercato dei PDA, però, un'altra azienda
 leader di questo mercato (
\emph on
Palm, Inc.
\emph default
) lanciò il pirmo dispositivo (
\emph on
Pilot 1000
\emph default
) con sistema operativo dedicato 
\emph on
Palm OS 1.0
\emph default
, realizzato su kernel 
\emph on
AMX 68000
\emph default
.
\end_layout

\begin_layout Standard
La principale particolarità di questa prima versione del sistema è che le
 papplicazioni venivano installate ed eseguite direttamente sulla RAM, anziché
 in uno storage dedicato.
 Analogamente al sistema di casa 
\emph on
Microsoft
\emph default
, anche 
\emph on
Palm OS
\emph default
 era fornito di un software di sincronizzazione dati con i personal computers,
 denominato 
\emph on
HotSync
\emph default
.
 Fondamentalmente si trattava di un semplice PDA con 
\emph on
Agenda Personale
\emph default
, 
\emph on
Registro Contatti
\emph default
, 
\emph on
Memo
\emph default
 e un rudimentale 
\emph on
Security Tool
\emph default
 per la gestione e il salvataggio dei dati sensibili.
\end_layout

\begin_layout Paragraph
Symbian OS
\end_layout

\begin_layout Standard
Il 1997 fu invece l'anno della nascita di 
\emph on
Symbian OS
\emph default
, l'antenato di 
\emph on
Symbian
\emph default
, il quale è tuttora mantenuto da 
\emph on
Accenture
\emph default
.
 Questo sistema, divenuto poi il più utilizzato prima della diffuzione di
 
\emph on
Android
\emph default
, si basa su architettura microkernel contenente solamente uno scheduler,
 un gestore della memoria e dei 
\emph on
device drivers
\emph default
, motivo per cui viene definito come nanokernel.
\end_layout

\begin_layout Standard
Lo stack di questo sistema era strutturato come segue, a partire dallo strato
 più elevato:
\end_layout

\begin_layout Itemize
Framework di Interfaccia Grafica
\end_layout

\begin_layout Itemize
Livello Applicativo
\end_layout

\begin_layout Itemize
Livello Sistema Operativo
\end_layout

\begin_layout Itemize
Servizi base del Sistema Operativo
\end_layout

\begin_layout Itemize
Servizi kernel e Interfaccia Hardware (non accessibile dalle app.
 esterne)
\end_layout

\begin_layout Standard
Fino al 2010 le applicazioni venivano sviluppate utilizzando una versione
 di
\emph on
 C
\emph default
 specifica, abbandonata poi a favore di 
\emph on
C++ standard
\emph default
 con 
\emph on
Qt
\emph default
 (framework con supporto all'interfaccia grafica).
 La peculiarità più interessante è che le applicazioni potevano essere sviluppat
e anche con linguaggi alternativi come 
\emph on
Python
\emph default
, 
\emph on
Adobe Flash Lite
\emph default
 e il diffusissimo 
\emph on
Java ME
\emph default
.
\end_layout

\begin_layout Standard
Mentre nasceva 
\emph on
Symbian OS
\emph default
, in casa 
\emph on
Microsoft
\emph default
 non si stava certo perdendo tempo; infatti, il neonato 
\emph on
Windows CE
\emph default
, era pronto per fare da apripista per una nuova generazione di dispositivi
 denominati 
\emph on
Palm-sized PC
\emph default
, i cosidetti 
\emph on
Palmari
\emph default
.
 Il 29 settembre 1997 viene rilasciato 
\emph on
Windows CE 2.0
\emph default
.
\end_layout

\begin_layout Subsection
1998-2006 - H/PCs e Mobile Phones
\end_layout

\begin_layout Paragraph
Windows CE 2.0
\end_layout

\begin_layout Standard
A causa del fatto che la prima versione di 
\emph on
Windows CE
\emph default
 non ha avuto lunga vita e considerato che era praticamente una 
\emph on
beta release
\emph default
, utilizzata principalmente per sondare il terreno su questa nuova tecnologia,
 
\emph on
Windows CE 2.0
\emph default
 viene considerato il primo vero sistema operativo per PDA di casa 
\emph on
Microsoft
\emph default
.
\end_layout

\begin_layout Standard
Divenendo un sistema operativo modulare, inoltre, si apre la strada per
 tutta una serie di dispositivi forniti con questo sistema all'avanguardia
 come ad esempio utensili da cucina, console per videogiochi, autoveicoli
 computerizzati e, naturalmente, PC portatili.
 Lo sviluppo e la diffusione di 
\emph on
Windows CE 2.0
\emph default
 in un ambiente dove la concorrenza esisteva e si era garantita il trademark
 della nomenclatura non era dei più semplici, tant'è che già nei primi mesi
 del 1998 
\emph on
Microsoft
\emph default
 venne accusata di violazioni di diritti d'autore da 
\emph on
3Com
\emph default
, la società madre del 
\emph on
Palm
\emph default
 PDA.
\end_layout

\begin_layout Paragraph
Windows Mobile (Pocket PC [Phone Edition] e Smartphone)
\end_layout

\begin_layout Standard
Fino alla fine del 1999 vediamo un panorama dominato dalla serie 2.1x di
 
\emph on
Windows CE
\emph default
, tra release e aggiornamenti, con una notevole quantità di novità interessanti
 come ad esempio una versione di 
\emph on
IE
\emph default
 (
\emph on
Internet Explorer
\emph default
) profondamente migliorata, l'inserimento del pacchetto professionale 
\emph on
Microsoft Pocket Access
\emph default
 e la possibilità di aprire i file di 
\emph on
Microsoft Word/Excel
\emph default
 senza necessità di convertirli nella versione mobile.
 Le nomenclature, in questo periodo, si alternano vorticosamente, fino alla
 nascita del famosissimo 
\emph on
Pocket PC
\emph default
 nell'Aprile del 2000.
 Si sono susseguite le seguenti versioni:
\end_layout

\begin_layout Itemize
CE 2.0 - Handheld PC 2.0
\end_layout

\begin_layout Itemize
CE 2.01 - Palm PC 1.0 / Auto PC 1.0
\end_layout

\begin_layout Itemize
CE 2.11 - Handheld PC professional / Palm-sized PC 1.1/1.2
\end_layout

\begin_layout Itemize
CE 2.12 - Auto PC 2.0
\end_layout

\begin_layout Itemize
CE 3.0 - Pocket PC (2000) / Handheld PC (2000) / HPC 2000
\end_layout

\begin_layout Standard
Per chiarire ogni ambiguità derivata dalle nomenclature bisogna sottolineare
 che sotto l’ombrello 
\emph on
Microsoft
\emph default
 esistono tre piattaforme principali: 
\emph on
Pocket PC
\emph default
 (
\emph on
Windows Mobile Classic
\emph default
), 
\emph on
Smartphone
\emph default
 (
\emph on
Windows Mobile Standart
\emph default
) e 
\emph on
Pocket PC Phone Edition
\emph default
 (
\emph on
Windows Mobile Professional
\emph default
).
 Ogni piattaforma 
\emph on
Windows Mobile
\emph default
 consiste in un substrato che usa differenti componenti della base comune
 
\emph on
Windows CE
\emph default
 più alcune funzionalità e applicazioni dedicate.
\end_layout

\begin_layout Paragraph
Windows CE 3.0, 4.0, 5.0
\end_layout

\begin_layout Standard
Mentre miglioravano notevolmente le applicazioni citate pocanzi e la suite
 
\emph on
Pocket Office
\emph default
 e mentre veniva integrato il 
\emph on
Media Player
\emph default
, si spianava rapidamente la strada per un nuovo mercato di applicazioni
 completamente innovativo, grazie anche alle performance in costante e notevole
 aumento.
 I quattro anni a seguire sono fondamentalemte caratterizzati dal rilascio
 della 
\emph on
Microsoft Windows CE 3.0
\emph default
 con la nuova nomenclatura 
\emph on
Windows Smartphone 2002
\emph default
 (
\emph on
Pocket PC 2000
\emph default
), per arrivare poi al tanto atteso 
\emph on
Windows Mobile 2003
\emph default
 (
\emph on
Pocket PC 2003
\emph default
) con 
\emph on
Windows CE 4.0
\emph default
, il quale apre le porte anche al supporto 
\emph on
bluetooth
\emph default
.
\end_layout

\begin_layout Standard

\emph on
Microsoft
\emph default
 aveva sicuramente dimostrato di aver tra le mani un sistema operativo multi-pia
ttaforma, multi funzione e assolutamente robusto, così nei primi mesi del
 2003 viene annunciato 
\emph on
Windows CE 5.0
\emph default
, che non verrà rilasciato prima della seconda metà del 2004, anche a causa
 di alcune priorità in ambito sicurezza sul diffusissimo 
\emph on
Windows
\emph default
 
\emph on
XP
\emph default
 che volgeva verso l'atteso 
\emph on
SP2
\emph default
 (
\emph on
Service Pack 2
\emph default
), rallentando le 
\emph on
milestones
\emph default
 del 
\begin_inset Quotes eld
\end_inset

fratello minore
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
La 
\emph on
CE 5.0
\emph default
 non solo sfoggia notevoli muglioramente per quanto riguarda il 
\emph on
file system
\emph default
 e le capacità di 
\emph on
storage
\emph default
, ma raggiunge anche un ottimo livello di sicurezza e robustezza, considerato
 il panorama tecnologico dell'epoca.
 La grande novità in ambito sviluppo è che 
\emph on
Windows CE 5.0
\emph default
 esponeva oltre due milioni e mezzo di righe di codice ad uno strumento
 denominato 
\emph on
Platform
\emph default
 
\emph on
Builder
\emph default
, il quale permetteva agli sviluppatori di software di terze parti di lavorare
 su funzionalità aggiuntive che potevano essere implementate a questo livello,
 come il supporto alle tecnologie 
\emph on
802.11i/n
\emph default
 e 
\emph on
WPA2
\emph default
.
 Infine, 
\emph on
Windows CE 5.0
\emph default
, porta con se la nuova 
\emph on
DirectX 8 (Direct3D
\emph default
), un supporto mobile molto sofisticato che dava accesso ad avanzate modalità
 grafiche 3D per lo sviluppo di videogiochi e non solo, un grande passo
 in avanti rispetto alla prima implementazione delle 
\emph on
DirectX
\emph default
 su 
\emph on
Windows CE 3.0
\emph default
.
\end_layout

\begin_layout Paragraph
Blackberry OS
\end_layout

\begin_layout Standard
Quasi contemporaneamente (Marzo 2002) 
\emph on
Blackberry Ltd
\emph default
.
 rilasciava la versione 3.6 del sistema operativo proprietario 
\emph on
Blackberry OS
\emph default
, rilasciato per la prima volta nel Gennaio 1999 e reso finalmente adatto
 alla tecnologia smartphones e a concorrere con i rivali dell'epoca.
\end_layout

\begin_layout Standard
Questo sistema, scritto in 
\emph on
C++
\emph default
 e rivolto unicamente al mercato degli smartphones a marchio 
\emph on
Blackberry
\emph default
, monta un kernel 
\emph on
JVM
\emph default
 e mette a disposizione un set di 
\emph on
API
\emph default
 per lo sviluppo di applicazioni in 
\emph on
Java Micro Edition
\emph default
; possiamo però considerarlo a pieno delle sue funzionalità solo a partire
 dal 2003, anno in cui sul sistema compaiono alcune delle fondamentali caratteri
stiche che lo identificano nella fascia degli smartphones per quella che
 è la concezione odierna, ossia il supporto alle email, gli SMS e la navigazione
 in Internet grazie ad un web browser integrato.
 
\emph on
Blackberry
\emph default
, anche grazie al fatto che persevera a non voler abbandonare (perlomeno
 non universalmente) la tastiera 
\emph on
QWERTY
\emph default
 fisica, continua ad essere la scelta adatta a moltissimi nostangici e raggiunge
 la soglia delle 33 milioni di unità vendute nel mondo nel 2012.
\end_layout

\begin_layout Paragraph
Windows CE 6.0
\end_layout

\begin_layout Standard
Nel frattempo 
\emph on
Microsoft
\emph default
, considerato il grande successo dell’ormai noto a tutti 
\emph on
Windows CE
\emph default
, rilascia l’ennesimo aggiornamento del sistema operativo denominato 
\emph on
Windows CE 6.0
\emph default
, questa volta con notevoli aggiornamenti e migliorie specialmente per quanto
 riguarda il supporto audio/video; volendo elencare alcune nuove funzionalità:
\end_layout

\begin_layout Itemize
Supporto ai codec TIFF, HD-DVD, DVD (MPEG-2) e altri minori
\end_layout

\begin_layout Itemize
Supporto audio surround virtuale e audio multi canale
\end_layout

\begin_layout Itemize
Possibilità di interlacciamento sui televisori
\end_layout

\begin_layout Itemize
USB On-the-Go (OTG)
\end_layout

\begin_layout Standard
Per quanto riguarda l’aspetto puramente tecnico, si evidenziano le seguenti
 modifiche e migliorie:
\end_layout

\begin_layout Itemize
Spazio dedicato ai programmi portato da 32MB a 2GB
\end_layout

\begin_layout Itemize
Numeri massimo di processi portato da 32 a 32’768
\end_layout

\begin_layout Itemize
512MB di memoria fisica
\end_layout

\begin_layout Itemize
Performance delle system call migliorate
\end_layout

\begin_layout Itemize
Introduzione del layer del sistema operativo dedicato a fornire un’interfaccia
 per l’hardware radio/modem, denominato “cell core” / 
\emph on
Windows Mobile RIL
\emph default
.
\end_layout

\begin_layout Standard
Con 
\emph on
Windows CE 6.0
\emph default
, 
\emph on
Microsoft
\emph default
 dichiara che l’aumento di dimensione del sistema operativo non sarà troppo
 gravoso, mantenendolo un sistema robusto, modulare e compatto; una dichiarazion
e molto importante, considerando l’imminente arrivo dei grandi colossi del
 mondo mobile.
 
\end_layout

\begin_layout Subsection
2007-2008 - 
\begin_inset Quotes eld
\end_inset

Tempi Moderni
\begin_inset Quotes erd
\end_inset

 (i primi smartphones)
\end_layout

\begin_layout Standard
Come in tutte le competizioni importanti i rivali (
\emph on
competitor
\emph default
) non si fanno attendere molto, tant’è che il biennio 2007-2008, tra le
 altre cose, è caratterizzato dall’entrata in commercio di due nuovi sistemi
 operativi destinati a raggiungere i primi posti della classifica dei migliori
 OS in ambito mobile nel giro di pochissimo tempo.
\end_layout

\begin_layout Standard
Parallelamente a questa competizione tutt’oggi in corso, alcune società
 tra le più note in ambito telefonia tra cui 
\emph on
Vodafone
\emph default
, 
\emph on
Motorola
\emph default
, 
\emph on
NEC
\emph default
, 
\emph on
Samsung
\emph default
 e altre, fondarono un’associazione no-profit denominata 
\emph on
LiMo
\emph default
 
\emph on
(Linux
\emph default
 
\emph on
Mobile)
\emph default
 
\emph on
foundation
\emph default
, allo scopo di realizzare il primo sistema operativo per smartphone completamen
te libero e indipendente dall’hardware ospitante.
\end_layout

\begin_layout Paragraph
iOS
\end_layout

\begin_layout Standard
A distanza di quasi sei mesi dalla presentazione avvenuta il 19 Gennaio
 2007, il 29 Giugno la 
\emph on
Apple Inc.
\emph default
, azienda con filosofia nettamente differente e opposta rispetto a quella
 della 
\emph on
LiMo foundation
\emph default
, rilascia la prima versione di iOS, dichiarando semplicemente che si trattava
 di una versione del noto OS X.
 Verrà poi rinominata in iPhone OS il 6 Marzo 2008 e diventerà iOS solo
 il 7 Giugno 2010, due settimane prima del rilascio di iOS 4 (21 Giugno
 2010).
\end_layout

\begin_layout Standard
Il sistema operativo 
\emph on
iOS
\emph default
 è un derivato del ramo 
\emph on
BSD
\emph default
 della famiglia di sistemi operativi 
\emph on
Unix
\emph default
, sviluppato in 
\emph on
C
\emph default
, 
\emph on
C++
\emph default
 e 
\emph on
Objective-C
\emph default
, a sorgente non libero.
 Il kernel ibrido utilizzato è 
\emph on
XNU
\emph default
 (acronimo di 
\emph on
X is Not Unix
\emph default
), rilasciato con licenza open-source dalla stessa 
\emph on
Apple Inc.
\emph default
, come componente del sistema operativo 
\emph on
Darwin
\emph default
 su cui esistono 
\emph on
OS X
\emph default
 e, appunto, 
\emph on
iOS
\emph default
.
\end_layout

\begin_layout Standard
Invece, a differenza di 
\emph on
XNU
\emph default
, 
\emph on
iOS
\emph default
 è rilasciato con licenza proprietaria in modalità 
\emph on
EULA
\emph default
 (
\emph on
End-User License Agreement
\emph default
), fatta eccezione per le componenti open-source.
\end_layout

\begin_layout Standard
Il 5 Settembre 2007 vengono rilasciate le prime due versioni dell’
\emph on
iPod Touch
\emph default
 (8/16 GB di memoria fisica integrata), un dispositivo del tutto simile
 all’ormai estremamente noto 
\emph on
iPhone
\emph default
 (oltre un milione di esemplari venduti nel primo periodo estivo a seguito
 del rilascio) ma privato delle funzionalità legate alla telefonia (telefono,
 messaggistica via SMS), della fotocamera e del GPS.
 In compenso, giustamente, veniva fornito con un’applicazione dedicata alla
 funzione di 
\emph on
Portable Media Player
\emph default
 (audio e video).
\end_layout

\begin_layout Standard
La struttura a layer del sistema operativo prevede quattro livelli di astrazione
, dedicati alla fornitura agevolata di un set di 
\emph on
A
\emph default
PI che creano un’interfaccia meno complessa ove non sono necessari i dettagli
 implementativi di componenti a “basso livello”, ossia (bottom-up):
\end_layout

\begin_layout Itemize
Core OS (iOS kernel)
\end_layout

\begin_layout Itemize
Core Services
\end_layout

\begin_layout Itemize
Media (Application Services)
\end_layout

\begin_layout Itemize
Cocoa Touch
\end_layout

\begin_layout Standard
Quest’ultimo è un 
\emph on
framework
\emph default
 di interfaccia grafica adatto allo sviluppo di applicazioni dedicate ai
 dispositivi 
\emph on
iOS
\emph default
 (
\emph on
iPhone
\emph default
, 
\emph on
iPod
\emph default
 
\emph on
Touch
\emph default
 e 
\emph on
iPad
\emph default
).
 Questo livello deriva dal quasi omonimo 
\emph on
toolset
\emph default
 di 
\emph on
API
\emph default
 (
\emph on
Mac OS X Cocoa
\emph default
) di 
\emph on
OS X,
\emph default
 principalmente scritto in 
\emph on
Objective-C
\emph default
, e permette l’accesso alle funzionalità specifiche dei supporti mobili
 di casa 
\emph on
Apple
\emph default
.
 A causa della chiusura della licenza con cui viene rilasciato 
\emph on
iOS
\emph default
, le architetture che supportano ufficialmente il sistema sono tutte unicamente
 a marchio 
\emph on
Apple
\emph default
: 
\emph on
iPhone
\emph default
, 
\emph on
iPad
\emph default
, 
\emph on
iPod
\emph default
 
\emph on
Touch
\emph default
, 
\emph on
Ipad
\emph default
 
\emph on
Mini
\emph default
, 
\emph on
Apple
\emph default
 
\emph on
TV
\emph default
 e 
\emph on
Apple
\emph default
 
\emph on
A4+
\emph default
.
 Inoltre, il famoso “
\emph on
jailbreaking
\emph default
” ha preso piede con estrema rapidità; consiste sostanzialmente in una pratica
 di sblocco che, inizialmente, permetteva di installare applicazioni native
 di terze parti, mente in seguito, con l’avvento dello store ufficiale per
 le applicazioni (
\emph on
iOS
\emph default
 
\emph on
App
\emph default
 
\emph on
Store
\emph default
), il dispositivo viene “
\emph on
jailbreaked
\emph default
” per altre ragioni, ad esempio per permettere l’installazione di temi personali
zzati o modificare i permessi di accesso al 
\emph on
file system
\emph default
.
\end_layout

\begin_layout Standard
A partire dal 6 Marzo 2008 è disponibile anche un 
\emph on
SDK
\emph default
 per lo sviluppo di applicazioni di terze parti per dispositivi 
\emph on
iOS
\emph default
, inclusa una modalità di simulazione per la verifica delle funzionalità.
 L’unica limitazione ricade nel fatto che non è possibile effettuare il
 test dell’app in fase di sviluppo su dispositivo reale o virtuale a meno
 d’aver acquistato l’annuale licenza da sviluppatore 
\emph on
iOS
\emph default
.
\end_layout

\begin_layout Paragraph
Android
\end_layout

\begin_layout Standard
Pochi mesi dopo, il 23 Settembre 2008, vede la luce 
\emph on
Android
\emph default
, un sistema a kernel monolitico rilasciato in licenza 
\emph on
Apache 2.0/GPL2
\emph default
 open-source basato sul kernel Linux ma con alcune componenti proprietarie,
 acquistato da 
\emph on
Google
\emph default
 nell’Agosto del 2005 e fino ad allora sviluppato dalla 
\emph on
Android Inc.
\emph default
, fondata a Palo Alto allo scopo di creare un avanzato sistema operativo
 per fotocamere digitali e divenuto poi un 
\emph on
competitor
\emph default
 di 
\emph on
Symbian OS
\emph default
, 
\emph on
Windows Mobile
\emph default
 e non solo.
 Il primo dispositivo commercializzato con 
\emph on
Android
\emph default
 fu l’
\emph on
HTC Dream
\emph default
, rilasciato il 22 Ottobre dello stesso anno.
\end_layout

\begin_layout Standard
Questo sistema, sviluppato in 
\emph on
C
\emph default
 (per quanto riguarda il core), 
\emph on
C++
\emph default
 e 
\emph on
Java
\emph default
 (per l’interfaccia grafica) supporta piattaforme 
\emph on
ARM
\emph default
 a 32bit, 
\emph on
MIPS
\emph default
 e 
\emph on
x86
\emph default
 ed è disponibile in oltre 45 linguaggi a differenza di 
\emph on
iOS
\emph default
 che ne supporta 
\emph on
solo
\emph default
 34.
 Lo stack del sistema operativo è così strutturato (bottom-up):
\end_layout

\begin_layout Itemize
Linux kernel
\end_layout

\begin_layout Itemize
Middleware (librerie e APIs scritte in C)
\end_layout

\begin_layout Itemize
Application Software (Activity Manager, Window Manager, View System, Notificatio
n Monitor, ecc)
\end_layout

\begin_layout Itemize
Applications (Home, Phone, Contacts, ecc)
\end_layout

\begin_layout Standard
Le applicazioni per 
\emph on
Android
\emph default
, sviluppate in codice 
\emph on
Java
\emph default
 e rilasciate in formato .apk, vengono tradotte dal 
\emph on
bytecode Java
\emph default
 nel formato 
\emph on
dex-code Dalvik
\emph default
, compilato dalla 
\emph on
Dalvik Virtual Machine
\emph default
 a livello 
\emph on
Middleware
\emph default
.
\end_layout

\begin_layout Standard
Queste applicazioni vengono abitualmente rilasciate attraverso il market
 ufficiale denominato 
\emph on
Google Play
\emph default
, ma non è il solo metodo di publicazione; queste infatti posso essere fornite
 anche nel formato installabile .apk, a patto che sul dispositivo ospite
 sia stata abilitata una particolare opzione per consentire l’installazione
 da fonti non certificate.
 Esistono anche numerosi marketplace alternativi come l’
\emph on
Amazon Appstore
\emph default
, il 
\emph on
Samsung Apps
\emph default
, 
\emph on
il meno noto Slide ME
\emph default
 e il multi-piattafrma 
\emph on
GetJar
\emph default
.
\end_layout

\begin_layout Standard
Analogamente a quanto avviene su dispositivi 
\emph on
iOS
\emph default
, l’esperienza utente è agevolata da un’interfaccia di manipolazione diretta
 degli oggetti sullo schermo, la quale supporta molte delle azioni tipiche
 del mondo reale.
 A supporto di queste azioni intervengono alle volte alcuni device hardware
 integrati come l’accelerometro, il giroscopio, sensori di prossimità e,
 recentemente, il barometro.
\end_layout

\begin_layout Standard
A dimostrazione della grande personalizzabilità di questo sistema operativo,
 vale la pena menzionare tre interessanti categorie:
\end_layout

\begin_layout Itemize
I derivati di 
\emph on
Android
\emph default
, quali ad esempio 
\emph on
Fire OS
\emph default
 di 
\emph on
Amazon
\emph default
 e 
\emph on
Aliyun OS
\emph default
 dell’
\emph on
Alibaba Group
\emph default
, sistemi operativi ereditati e sviluppati sulla base in licenza libera
 di 
\emph on
Android
\end_layout

\begin_layout Itemize
Le applicazioni come 
\emph on
TouchWiz
\emph default
 e 
\emph on
HTC Sense
\emph default
 le quali vanno a sostituire buona parte delle applicazioni e/o dell’interfaccia
 classica fornita abitualmente dalle versioni standard del sistema e che,
 talvolta, vengono addirittura pre-integrate da alcuni produttori (come
 appunto 
\emph on
HTC
\emph default
)
\end_layout

\begin_layout Itemize
Gli 
\emph on
aftermarket firmwares
\emph default
, come la 
\emph on
Cyanogenmod
\emph default
, versioni particolari del sistema spesso provviste di software di terze
 parti a supporto di funzionalità e opzioni non ufficiali (ossia non riscontrabi
li sui firmware ufficialmente distribuiti dai venditori usuali)
\end_layout

\begin_layout Standard
Con due colossi del genere alle spalle, rispettivamente 
\emph on
Apple
\emph default
 e 
\emph on
Google
\emph default
, c’erano tutte le condizioni per una corsa al monopolio senza precedenti,
 corsa che continua ancora oggi rilascio dopo rilascio, feature dopo feature,
 non senza qualche aspro contenzioso sui diritti che mettono amanti della
 
\emph on
mela
\emph default
 e di 
\emph on
BigG
\emph default
 gli uni contro gli altri sempre più frequentemente.
 
\end_layout

\begin_layout Subsection
2009 - OS alternativi open-source e Smart TV
\end_layout

\begin_layout Standard
Nei primissimi del 2009 a Sunnyvale in California, 
\emph on
la Palm, Inc.

\emph default
 era pronta per il primo rilascio 
\emph on
RTP
\emph default
 (
\emph on
Release to Manufacturing
\emph default
), a cui è seguito il rilascio al pubblico avvenuto tra Giugno e Luglio
 dello stesso anno, di un sistema per smartphones denominato 
\emph on
WebOS
\emph default
, in seguito rinominato in 
\emph on
Palm WebOS
\emph default
.
\end_layout

\begin_layout Standard
Varie versioni di questo sistema sono state utilizzate da molti device prima
 in casa 
\emph on
Palm
\emph default
 dalla versione 1.x.x alla 2.x.x, come il 
\emph on
Pre
\emph default
 e il 
\emph on
Pixi
\emph default
, poi in casa HP dalla versione 3.0.x, con il tablet 
\emph on
HP TouchPad
\emph default
 dopo l’acquisizione della prima da parte di quest’ultima, avvenuta l’1
 Luglio del 2010.
\end_layout

\begin_layout Standard
Ad oggi, dopo l’ennesima acquisizione del sistema da parte di 
\emph on
LG Electronics
\emph default
 (Febbraio 2013), lo sviluppo è orientato alle 
\emph on
Smart TVs
\emph default
 di casa 
\emph on
LG
\emph default
, la quale non esclude comunque un possibile rilascio di 
\emph on
WebOS
\emph default
 (ancora una volta rinominato, questa volta in 
\emph on
webOS
\emph default
 e rilasciato open-source da 
\emph on
HP
\emph default
 dopo l’abbandono del progetto 
\emph on
TouchPad
\emph default
) per 
\emph on
smartphones
\emph default
.
\end_layout

\begin_layout Standard

\emph on
WebOS
\emph default
 è un sistema a kernel monolitico destinato a piattaforme ad architettura
 
\emph on
ARM
\emph default
 basato su kernel Linux, quasi completamente sviluppato in 
\emph on
JavaScript
\emph default
 col supporto di 
\emph on
HTML
\emph default
 e 
\emph on
CSS
\emph default
 per quanto riguarda il markup.
 Il motore della piattaforma (
\emph on
SDK
\emph default
) è stato 
\emph on
Mojo
\emph default
 dal 2009 al 2011, anno in cui è stato sostituito da 
\emph on
Enyo
\emph default
, un framework 
\emph on
JavaScript
\emph default
 open-source epr applicazioni web, TV, desktop e mobile, sul quale sono
 nati numerosi progetti tra cui 
\emph on
Enyo Apps, 
\emph default
l’
\emph on
LG Smart TV
\emph default
 e 
\emph on
Openbravo Mobile
\emph default
, una directory di developers denominata 
\emph on
Enyo Developer Directora
\emph default
.
\end_layout

\begin_layout Standard
Tra le più interessanti peculiarità di questo sistema abbiamo la gestione
 del multitasking organizzata a “carte” che rappresentano le applicazioni,
 le quali possono essere attivate e disattivate con una gesture di swipe
 (scorrimento) orizzontale e chiuse con una gesture verticale.
 A partire da 
\emph on
WebOS 2.0
\emph default
 è stato introdotto 
\emph on
Stacks
\emph default
, un sistema di organizzazione a gruppi di “carte” correlate tra loro.
\end_layout

\begin_layout Standard
Ad oggi 
\emph on
WebOS,
\emph default
 come molti altri sistemi operativi destinati all’ambito mobile e non solo,
 supportano il 
\emph on
gesturing multi-touch
\emph default
, un sistema introdotto sugli smartphone solo all’alba del nuovo decennio
 (2010); ad esempio, per quanto riguarda 
\emph on
Android
\emph default
, è stato introdotto a partire da 
\emph on
Android 2.1
\emph default
, una delle 
\emph on
milestones
\emph default
 più note ed importanti del sistema operativo mobile di casa 
\emph on
Google
\emph default
.
 
\end_layout

\begin_layout Section
Dai Mobile Phones a Tablets e Docking Stations (PC/tablet)
\end_layout

\begin_layout Subsection
2010
\end_layout

\begin_layout Paragraph
Android 2.1 Eclair - Multitouch
\end_layout

\begin_layout Standard
Come anticipato pocanzi la nuova e rivoluzionaria release del noto sistema
 operativo di casa Google, non si fa attendere a lugo.
 E’ il 12 Gennaio 2010 quando viene rilasciato Android 2.1, un aggiornamento
 denominato “minor platform release”, ma che porta con se un nuovo elemento
 tecnologico tutt’altro che “minore”: il supporto multitouch.
\end_layout

\begin_layout Standard
In un primo periodo questo supporto era utilizzato da pochissime applicazioni
 tra cui Dolphin Browser, un browser proprietario per Android e iOS della
 MoboTap, Inc., una delle prime alternative al Browser integrato su Android
 diffusosi proprio grazie a questo suo essere all’avanguardia anche con
 il multi-touch e per il suo elevatissimo supporto ad HTML5 (nel Maggio
 del 2012 viene riconosciuto come il browser mobile con il miglior supporto
 ad HTML5).
\end_layout

\begin_layout Paragraph
Android 2.2 Froyo - Tethering, Hotspot, Flash e App2SD
\end_layout

\begin_layout Standard
Il 20 Maggio 2010 viene rilasciata la successiva versione di Android, denominata
 Frozen Yogurt - brevemente Froyo.
 La base di questo sistema operativo era il Linux kernel 2.6.32 e le novità
 che ha portato con se hanno sicuramente reso in maniera definitiva i dispositiv
i Android dei coltellini svizzeri nel mondo dei dispositivi mobili.
 Aldilà delle ottimizzazioni per quanto riguarda le performance sia dal
 punto di vista della velocità che da quello della memoria, è fondamentale
 citare alcune novità in particolare:
\end_layout

\begin_layout Itemize
L’applicazione Browser gode del V8 JavaScript engine di Chrome
\end_layout

\begin_layout Itemize
Supporto all’Android Cloud to Device Messaging (C2DM) abilitante le notifiche
 Push
\end_layout

\begin_layout Itemize
USB Tethering e Wi-Fi Hotspot
\end_layout

\begin_layout Itemize
Supporto all’installazione delle applicazioni nella memoria espandibile
 (uSD)
\end_layout

\begin_layout Itemize
Supporto ad Adobe Flash
\end_layout

\begin_layout Paragraph
Android 2.3 / 2.3.2 Gingerbread
\end_layout

\begin_layout Standard
Il 6 Dicembre 2010 viene pubblicato il terzo e ultimo rilascio del 2010,
 per il sistema operativo di Google, denominato Gingerbread, basato sul
 Linux kernel 2.6.35.
 Le novità, sia software che hardware, ancora una volta sono assolutamente
 degne di nota:
\end_layout

\begin_layout Itemize
Supporto nativo a sensori aggiuntivi come giroscopio e barometro
\end_layout

\begin_layout Itemize
File System ext4 sui device più moderni
\end_layout

\begin_layout Itemize
Ottimizzazione audio/video sia a livello di codec che di potenzialità
\end_layout

\begin_layout Itemize
Supporto alla tecnologia NFC (Near Field Communication)
\end_layout

\begin_layout Itemize
Supporto per multi-fotocamera
\end_layout

\begin_layout Standard
Sebbene Android abbia preso piede più tardi rispetto ad iOS, grazie alla
 possibilità di essere installato su una moltitudine veramente notevole
 di dispositivi e grazie alle grandissime novità e passi avanti fatti dal
 sistema operativo in quest’annata decisamente ottima, la diffusione e la
 curca di crescita di Android iniziava a preoccupare gli altri produttori
 di sistemi operativi per dispositivi mobile poiché tutto sembrava indicare
 con chiarezza chi fosse il prossimo leader del settore.
\end_layout

\begin_layout Paragraph
iOS - Multitasking
\end_layout

\begin_layout Standard
Un grande passo in avanti è stato fatto anche all’interno delle mura Apple
 e fornito al pubblico nel Giugno del 2010, quando con l’uscita di iOS 4
 anche i dispositivi iOS potevano godere del supporto multitasking, una
 funzionalità rivoluzionaria che allargava ulteriormente le vedute per quanto
 riguarda le possibilità d’utilizzo dei dispositivi portabili.
 Un paio di esempi eclatanti la possibilità di ascoltare musica (ad esempio
 con Pandora Internet Radio che permette la riproduzione di musica in streaming)
 mentre si compiono altre attività e la possibilità di effettuare telefonate
 VoIP con Skype mentre si utilizza un’altra app.
 Un’errore spesso comesso è quello di confondere il multitasking con quello
 che avviene effettuando una doppia pressione del tasto Home (sull’iPhone
 / iPad / iPod Touch), il quale scatena un’azione che permette di selezionare
 un’altra tra le applicazioni attive a cui passare; questa funzionalità
 è correttamente denominata fast app switching.
 
\end_layout

\begin_layout Paragraph
iOS - iPad Tablet
\end_layout

\begin_layout Standard
Prima dell’ottimizzazione ad iOS nell’azienda di Cupertino bolliva in pentola
 un altro prodotto, l’iPad (First Generation), il Tablet riferimento degli
 ultimi anni.
 Presentato il 27 Gennaio e rilasciato poco più di due mesi dopo (il 3 Aprile)
 negli Stati Uniti nella versione Wi-Fi e il 30 Aprile nella versione Wi-Fi
 + 3G, viene rilasciato in Italia e nel resto dell’Europa a fine Maggio
 2010.
 Nei primi 80 giorni, la prima versione dell’iPad vende oltre tre milioni
 di esemplari, definitivamente acclamati dalla critica e dalla massa, nonostante
 la mancaza del supporto ad Adobe Flash.
\end_layout

\begin_layout Standard
La più grande differenza con i modelli a seguire è l’assenza della fotocamera,
 mentre per il resto, nonostante le caratteristiche non siano delle migliori,
 non ha nulla da invidiare e rimane tutt’ora uno strumento comodissimo sia
 per studio che per lavoro.
\end_layout

\begin_layout Standard
Il processore, comprensivo di CPU da 1GHz, 256MB di RAM e GPU PowerVR SGX535,
 è un Apple A4, successivamente utilizzato anche per iPhone 4, iPod Touch
 4 e Apple TV 2.
 L’ultima versione di iOS disponibile per questa prima versione del tablet
 è iOS 5.1.1, rilasciata il 7 Maggio 2012.
 Inizialmente veniva venduto con iPhone OS 3.2.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename assets/ipad.png
	width 100text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
iPad Timeline
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Windows Phone 7
\end_layout

\begin_layout Standard
Il cambiamento più grande si è visto sicuramente in casa Microsoft con il
 passaggio dalla serie Windows Mobile alla diffusissima serie Windows Phone,
 con la presentazione del Windows Phone 7 al Mobile Congress il 15 Febbraio
 del 2010.
 Questa versione introduce anzitutto una nuova interfaccia che segna drasticamen
te un cambio di direzione per il sistema operativo che ha ben poco a che
 fare con le versioni precedenti e, soprattutto, è incompatibile con esse.
 Orientandosi nettamente verso il mercato consumer del singolo cliente finale
 anziché quello enterprise, sempre e comunque con un occhio di riguardo
 per le reti aziendali, sono state apportate alcune definitive migliorie
 necessarie per accedere ad un mercato di questo tipo, come ad esempio il
 supporto al multitouch e agli schermi capacitivi.
 Questa versione viene inoltre rilasciata con una versione di IE derivata
 da Internet Explorer 9 e la celeberrima suite Office denominata Mobile
 Office 2010, comprensiva di Word, Excel, Powerpoint e altri cavalli di
 battaglia di Microsoft.
 Sebbene negli USA il lancio sia stato effettuato solo in Novembre, in Europa
 la pubblicazione è stata effettuata in anticipo, ossia il 22 Ottobre 2010,
 con la messa in commercio dei primi modelli a marchio Samsung, LG e HTC.
 La versione definitiva del software era stata rilasciata il 16 Settembre
 2010.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename assets/393px-Windows_Phone_7_Timeline.svg.png
	lyxscale 50
	width 40text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Windows Phone 7 Timeline
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
MeeGo e Bada
\end_layout

\begin_layout Standard
Nel Maggio del 2010 vedono la luce due sistemi operativi molto importanti
 per la famiglia dei sistemi operativi mobile Unix/Posix/Linux open-source;
 sono MeeGo e Bada, due sistemi operativi ormai dismessi per far spazio
 ad evoluzioni più promettenti.
 Analizzandoli nello specifico notiamo alcune sostanziali differenze e analogie
 che vale la pena mettere in evidenza.
\end_layout

\begin_layout Standard
MeeGo, che in realtà ancora esiste nella sua derivazione denominata Mer,
 un middleware per sistemi operativi per smartphones Linux-based, è stato
 sviluppato pensando che potesse essere utilizzato su una moltitudine di
 dispositivi come netbooks, smartphones, tablets, embedded systems, communicatio
n devices, smart tvs e persino in-car/in-vehicle infotainment devices.
\end_layout

\begin_layout Standard
MeeGo è stato dismesso nel Settembre 2011 dalla Linux Foundation per concentrars
i sullo sviluppo di Tizen ma, il suo successore Mer, verrà preso in carico
 da una nuova startup finlandese denominata Jolla, la quale ha dichiarato
 le proprie intenzioni (Luglio 2010) di sviluppare un nuovo sistema operativo
 denominato Sailfish OS, previsto per il 2012.
\end_layout

\begin_layout Standard
Per quanto riguarda Bada (Samsung), invece, è stato sviluppato anche un
 market dedicato, il famoso Samsung Apps, che conta oltre 2400 applicazioni
 ed è ancora disponibile su dispositivi Samsung con Android, nonostante
 la cancellazione dello sviluppo del sistema operativo.
 Nonostante Bada sia stato un sistema fondamentale per la multinazionale
 sud koreana, MeeGo vede il supporto da parte di una moltitudine di aziende,
 tra cui spiccano Asus, Acer, AMD, Intel e Nokia.
\end_layout

\begin_layout Standard
Architetturalmente parlando è interessante il fatto che MeeGo, basato su
 una distribuzione Linux derivata da Maemo (Nokia) e Moblin (Intel, basato
 su Fedora), sia stato uno tra i primi, nel panorama delle distribuzioni
 Linux, ad adottare il file system Btrfs; utilizza inoltre gli applicativi/repos
itory in formato RPM.
\end_layout

\begin_layout Standard
Invece Bada, definito più come una piattaforma a kernel configurabile, per
 via del fatto che ammette sia i kernel ibridi RTOS che il kernel Linux,
 utilizza codice derivato da FreeBSD, NetBSD e OpenBSD, non ha (aveva) niente
 da invidiare ai colleghi adottati sempre da Samsung, ossia Android e Windows
 Phone; infatti, su Bada 2.0, vediamo alcune funzionalità di spicco quali:
\end_layout

\begin_layout Itemize
browser Dolphin
\end_layout

\begin_layout Itemize
multitasking
\end_layout

\begin_layout Itemize
supporto Adobe Flash lite
\end_layout

\begin_layout Itemize
supporto HTML5 completo
\end_layout

\begin_layout Itemize
tecnologia NFC
\end_layout

\begin_layout Itemize
text-to-speech / speech-to-text
\end_layout

\begin_layout Itemize
Vlingo, comandi vocali
\end_layout

\begin_layout Standard
Per favorire l’interazione, inoltre, Bada supporta una serie di meccanismi
 e sensori quali face detection, accelerometro, GPS, multitouch, magnetometro
 e molti altri.
 Infine, Samsung cessa il supporto a partire dal 25 Febbraio 2013, ancora
 una volta a favore del più promettente progetto Tizen.
\end_layout

\begin_layout Subsection
2011
\end_layout

\begin_layout Paragraph
Android 3 per Tablets
\end_layout

\begin_layout Standard
Dopo alcuni importanti aggiornamenti alla serie 2.3.x nel Gennaio 2011, proseguiti
 a livello di supporto durante tutto l’anno con vari bug fixes e enhancements
 perlopiù dedicati alle serie Nexus e Samsung Galaxy, il 22 Gennaio 2011
 vede la luce una nuova versione di Android, la 3.0 Honeycomb; per la prima
 volta nella storia di Android si tratta di un rilascio dedicato unitamente
 ai tablet, quindi disponibile solo per questa tipologia di dispositivi.
 Il primo device ad ospitare questa nuova tecnologia è il Motorola XOOM,
 rilasciato due giorni dopo l’uscita del sistema operativo.
\end_layout

\begin_layout Standard
Tra le più importanti modifiche, aggiunte e migliorie apportate vale la
 pena segnalare quanto segue:
\end_layout

\begin_layout Itemize
interfaccia grafica ottimizzata e resa olografica
\end_layout

\begin_layout Itemize
aggiunta barra di sistema per l’accesso alle notifiche, visura dello stato
 del sistema e bottoni fisici replicati in versione soft
\end_layout

\begin_layout Itemize
semplificato il multitasking (in questo caso si intende il fast app-switching)
\end_layout

\begin_layout Itemize
UX rielaborata sulla base di un nuovo framework che ne semplifica anche
 lo sviluppo di app; migliorie soprattutto per quanto riguarda l’interfaccia
 copia/incolla, la tastiera virtuale, la navigazione nel browser, l’accesso
 alle fotocamere e alle loro impostazioni, la navigazione dei contatti e
 delle email
\end_layout

\begin_layout Itemize
supporto alle video chat con Google Talk - supporto accelerazione hardware
 OpenGL con comportamento controllabile dallo sviluppatore per ogni livello
\end_layout

\begin_layout Itemize
supporto ai processori multicore, per il quale è stato necessario applicare
 modifiche ad un moltidudine di elementi core, grazie alle quali tutte le
 applicazione godranno del giovamento della ristrutturazione, anche quelle
 a singolo thread
\end_layout

\begin_layout Itemize
nel caso “peggiore” il secondo core verrà utilizzato per il garbage collector
\end_layout

\begin_layout Standard
Come ogni aggiornamento di main-version che si rispetti, le aggiunte e le
 migliorie apportate sono sintomo di una costante corsa al supporto delle
 tecnologie più avanzate possibile per fornire esperienza utente, usabilità
 e funzionalità all’altezza di un colosse dell’informatica quale Google.
 Le versioni a seguire della serie 3.x e 3.2.x sono più che altro ottimizzazioni
 minori, bugfixing e supporti a device aggiuntivi e codecs:
\end_layout

\begin_layout Itemize
3.0, 3.1 - HTTPS con SNI (Server Name Indication) e supporto HTTP proxy per
 ogni access point Wi-Fi connesso
\end_layout

\begin_layout Itemize
3.1 - supporto tastiere esterne e dispositivi di puntamento, gamepads e joysticks
\end_layout

\begin_layout Itemize
3.2 - supportato dalle Google TV 1st/2nd Generation, aggiornamenti a Android
 Market, Google Books, Adobe Flash e al supporto all’handwriting prediction
 cinese.
\end_layout

\begin_layout Paragraph
Android 4 per Tablets e Smartphones
\end_layout

\begin_layout Standard
Il 19 Ottobre 2011 vede la luce la nuova versione di Android con interfaccia
 completamente rinnovata e evoluta, Android 4 Ice Cream Sandwich, basato
 sul kernel Linux 3.0.1, il cui codice verrà rilasciato poco meno di un mese
 più tardi.
 Ancora una volta, nel rispetto del discorso appena affrontato relativamente
 le nuove main-versions, vengono inserita in questa release una serie tutt’altro
 che trascurabile di nuove funzionalità:
\end_layout

\begin_layout Itemize
i bottoni soft disponibili sulla 3.x sono resi disponibili anche per la versione
 smartphone
\end_layout

\begin_layout Itemize
semplicità nella creazione di cartella con un’azione di drag&drop (simil-iOS)
\end_layout

\begin_layout Itemize
screenshot integrato con un’azione contemporanea su più pulsanti (simil-iOS)
\end_layout

\begin_layout Itemize
Face Unlock, la funzionalità che permette lo sblocco del telefono grazie
 al riconoscimento del volto
\end_layout

\begin_layout Itemize
Integrazione automatica e aggiornamento dei bookmarks in Chrome
\end_layout

\begin_layout Itemize
Photo Editor integrato
\end_layout

\begin_layout Itemize
Android Beam, funzionalità che grazie all’NFC permette lo scambio di informazion
i tra devices, come ad esempio preferiti del browser, contatti e video di
 youtube
\end_layout

\begin_layout Itemize
Wi-Fi Direct, una tecnologia che permette la connessione tra più devices
 senza necessità di un access point wireless e che permette di comunicare
 alla velocità di una comune Wi-Fi
\end_layout

\begin_layout Standard
In seguito, tra bug fixments e improvements minori, entro la fine dell’anno
 vengono pubblicate anche la 4.0.1, la 4.0.2 e la 4.0.3, rispettivamente il 21
 Ottobre, 28 Novembre e 16 Dicembre.
\end_layout

\begin_layout Standard
Lo scopo principe della quarta generazione del sistema operativo di Google
 per Tablets, Smartphones e Google TV era quello di rendere sempre più visibili
 e facilmente accessibili le azioni più comuni da parte degli utilizzatori
 finali, in modo da risultare in un’interfaccia gradevole, intuitiva e il
 più possibile usabile,
\end_layout

\begin_layout Standard
Un grande passo in avanti è stato fatto specialmente dalle schermate “Home”
 che, grazie ai widget personalizzabili, permettono non solo di creare collegame
nti alle app più utilizzate e cartelle usate come contenitori logici di
 app, bensì consentono di inserire intere applicazioni live grazie a contenitori
 interattivi, i widget appunto., dai quali è possibile controllare la mail,
 visionare il calendario, riprodurre la musica e controllare i social networks.
\end_layout

\begin_layout Standard
Inoltre, grazie alle nuove azioni a schermo bloccato, è possibile accedere
 ad alcune tra le funzionalità più utilizzate (fotocamera, notifiche e gestione
 riproduzione se si sta ascoltando musica) senza dover necessariamente sbloccare
 il dispositivo (simil-iOS).
\end_layout

\begin_layout Paragraph
iOS 5
\end_layout

\begin_layout Standard
Il 12 Ottobre, verso la fine del 2011, viene rilasciato iOS5 a seguito dell’annu
nciazione dello stesso avvenuta il 6 Giugno durante l’Apple Worldwide Developer
 Conference nella quale è stato presentato anche Max OS X Lion ed è stato
 annunciato iCloud, il noto servizio Cloud di Cupertino che verrà reso disponibi
le appunto a partire da iOS5, consentendo di sincronizzare musica, immagini
 e video tra tutti i devices connessi.
 La data di annunciazione del rilascio è il 4 Ottobre, durante un evento
 in cui veniva presentato l’iPhone 4S, che verrà pubblicato direttamente
 con iOS5 pre-installato, e l’esclusivo Siri, un app che permette di effettuare
 alcune azioni molto comuni direttamente utilizzando dei comandi vocali.
\end_layout

\begin_layout Standard
Come già accaduto in passato nella storia delle release di iOS, con questa
 versione viene interrotto il supporto ad alcuni dispositivi quali l’iPhone
 3G e l’iPod Touch (seconda generazione).
\end_layout

\begin_layout Standard
Tra le principali novità e nuove features, le maggiormente degne di nota:
\end_layout

\begin_layout Itemize
possibilità di sincronizzazione con iTunes in wireless, senza necessità
 di un collegamente fisico tra smartphone e computer
\end_layout

\begin_layout Itemize
massiccia integrazione con Twitter e possibilità di condividere stati e
 immagini direttamente dal’app Camera, da Safari, Youtube e Google Maps.
\end_layout

\begin_layout Itemize
Notification Center (simil-Android) al posto dei popup per le notifiche
 
\end_layout

\begin_layout Standard
Purtroppo le cose belle non sempre arrivano senza qualche problema alle
 volte non trascurabile, come ad esempio i bug riguardanti la batteria che
 hanno reso ancor più critica la durata dei dispositivi mobili Apple, già
 noti per la loro pessima battery-life.
 Alcuni bug segnalati riguardanti la SIM, la Wi-Fi e appunto la batteria
 non sono ancora stati risolti quando, a circa un mese di distanza dal lancio,
 viene rilasciata la prima update iOS 5.0.1.
\end_layout

\begin_layout Standard
Nonostante alcuni inconvenienti la ricezione è stata ottima da parte degli
 estimatori della Apple.
\end_layout

\begin_layout Paragraph
Windows Phone 7.5
\end_layout

\begin_layout Standard
A confronto dei due colossi, Android e iOS, Windows Phone (con la nuova
 nomenclatura) risulta essere un novellino nel panorama dei big dei sistemi
 operativi mobili, ma con tutt’altre intenzioni che quella di farsi da parte.
\end_layout

\begin_layout Standard
Ad appena un anno dall’annuncio di Windows Phone 7, Steve Ballmer annuncia
 al Mobile World Congress la prossima uscita di Windows Phone 7.5 (che internamen
te veniva chiamano Windows Phone 7.1) prevista per il quarto trimestre dell’anno
 in corso.
 Il 27 Settembre 2011 inizia la diffusione del nuovo sistema operativo con
 nome in codice Mango e pochissme settimane a seguire viene pubblicato il
 primo smartphone con Windows phone 7.5 pre-installato.
\end_layout

\begin_layout Standard
Per farsi strada così velocemente tra i colossi, non potevano che essere
 state inserite una quantità industriale di nuove funzionalità e supporti
 (oltre 500), di cui riportiamo le più salienti senza voler definire un
 elenco completamente esaustivo:
\end_layout

\begin_layout Itemize
Messaging e Social Integration
\end_layout

\begin_deeper
\begin_layout Itemize
People Hub supporta Twitter e Linkedin
\end_layout

\begin_layout Itemize
Supporto ai Check-in con Facebook
\end_layout

\begin_layout Itemize
Le schede contatto sono un punto d’accesso globale a SMS, Email e Messenger
\end_layout

\begin_layout Itemize
Integrazione delle chat di Facebook e Windows Live Messenger
\end_layout

\begin_layout Itemize
Eventi di Facebook integrati nel calendario
\end_layout

\begin_layout Itemize
Voice-to-Text/Text-to-Voice integrato come supporto anche all’handwriting
\end_layout

\end_deeper
\begin_layout Itemize
Search e Office
\end_layout

\begin_deeper
\begin_layout Itemize
Bing Vision (codici a barre, OCR, eccetera), Bing Audio/Music (riconoscimento
 musicale simil-Shazam), Bing Local Scout e Bing Quick Search (informazioni
 sui Punti di Interesse nelle vicinanze e dettagli su prodotti e recensioni),
 Bing Search e Bing Maps (navigazione vocale, ricerca per immagini e integrazion
e con app di terze parti)
\end_layout

\begin_layout Itemize
Sincronizzazione tra Skydrive e Office 365 (compresi i PDF)
\end_layout

\begin_layout Itemize
Supporto alle Macro in Excel Mobile
\end_layout

\begin_layout Itemize
Deprecato il supporto alla modifica di documenti di versioni Office più
 vecchie di Office 2007
\end_layout

\end_deeper
\begin_layout Itemize
Foto, Multimedia e Camera
\end_layout

\begin_deeper
\begin_layout Itemize
Integrazione tra i contatti e Facebook / Skydrive per informazioni aggiuntive
\end_layout

\begin_layout Itemize
Integrazione galleria immagini e foto con Twitter (condivisione), Facebook
 e Skydrive
\end_layout

\begin_layout Itemize
Ottimizzazioni all’interfaccia del Media Player e alcune integrazioni per
 una maggiore fruibilità e accessibilità del servizio
\end_layout

\begin_layout Itemize
Nuova interfaccia grafica e nuove interazioni
\end_layout

\begin_layout Itemize
Supporto per la camera frontale
\end_layout

\end_deeper
\begin_layout Itemize
Internet Explorer 9 Mobile
\end_layout

\begin_layout Standard
A queste bisogna aggiungere alcuni miglioramenti e ottimizzazioni per quanto
 concerne la sicurezza, il supporto alle lingue e allo sviluppo (API).
\end_layout

\begin_layout Standard
Purtroppo la delusione di molti estimatori di Microsoft è cresciuta notevolmente
 probabilmente con la crescita delle aspettative dell’utente medio e i molti
 supporti mancanti su Windows Phone si fanno sentire forte e chiaro, come
 ad esempio l’assenza di un vero multitasking per app di terze parti, nessun
 supporto per uSD, assenza di un File Manager, scarsa personalizzabilità
 anche per quanto riguarda alcune banalità come la scelta di sincronizzare
 o meno i contatti con il servizio cloud, sistema operativo totalmente chiuso
 senza possibilità di market alternativi, interfaccia grafica molto poco
 personalizzabile, nessun supporto per tastiere Bluetooth e impossibilità
 di aggiornare a Windows Mobile 8.
 Queste sono solamente alcune delle limitazioni dettate dal sistema operativo,
 da sommare all’usabilità che sicuramente non eccelle, alla scarsità di
 funzionalità nonostante i grandi passi in avanti appena descritti ma soprattutt
o alla mancanza di alcune funzionalità di base presenti nei dispositivi
 mobili dall’alba dei tempi come ad esempio la possibilità di salvare i
 contatti sulla SIM, importare o esportare i contatti in formato CSV e la
 possibilità di utilizzare un MP3 come suoneria.
\end_layout

\begin_layout Subsection
2012
\end_layout

\begin_layout Standard
Già da un po’ di tempo i dispositivi mobili, intesi come smartphones e tablets
 oltre a telefoni cellulari e PDAs, non sono più solamente un utilità per
 quanto riguarda svago, produttività e connettività, bensì un accessorio
 immancabile nelle tasche di chiunque abbia o possa avere accesso a queste
 tecnologie.
\end_layout

\begin_layout Standard
Il mercato è pronto e la richiesta è alle stelle e le aziende che cavalcano
 questo successo sanno bene che non c’è tempo da perdere e che, ogni giorno,
 bisogna fornire qualcosa in più per soddisfare le richieste della clientela:
 le ultime tecnologie a portata di mano ad un prezzo vantaggioso.
\end_layout

\begin_layout Standard
In casa Google gli aggiornamenti ad Android si susseguono a ritmi forsennati
 e il 29 Marzo 2012 viene rilasciato l’ultimo anello della catena Ice Cream
 Sandwich 4.0.x, ossia Android 4.0.4, una suite di aggiornamenti minori.
\end_layout

\begin_layout Paragraph
Android 4.1
\end_layout

\begin_layout Standard
E’ il 27 Giugno 2012 quando viene annunciato Android 4.1 Jelly Bean al Google
 I/O, l’annuale conferenza per developers che si tiene a San Francisco,
 California.
 L’obiettivo principale di questo nuovo sistema basato sul kernel Linux
 3.0.31 era quello di migliorare in termini di funzionalità e performance
 l’interfaccia grafica grazie ad alcune introduzioni tecnologiche quali
 touch anticipation, multiple (triple) buffering e sincronizzazione analogica
 verticale estesa, allo scopo di ottenere un’interfaccia più fluida e meno
 dispendiosa per quanto riguarda l’utilizzo della batteria.
\end_layout

\begin_layout Standard
Il primo tablet ad essere pubblicato, il 13 Luglio, è il Nexus 7 che segue
 la pubblicazione del sistema operativo sull’Android Open Source Project
 avvenuta il 9 Luglio 2012.
\end_layout

\begin_layout Standard
Gli aggiornamenti più importanti, interfaccia grafica a parte, riguardano
 specialmente l’usabilità e l’accessibilità, alcuni miglioramenti ad applicazion
i esistenti come il supporto al Bluetooth su Android Beam, il supporto all’Offli
ne Voice Dictation, ottimizzazioni alla ricerca vocale e all’app che gestisce
 la fotocamera e la sostituzione del Browser stock con la versione mobile
 di Google Chrome per i dispositivi forniti con Android 4.1 pre-installato.
\end_layout

\begin_layout Standard
A seguito di due aggiornamenti avvenuti nei mesi successivi, più che altro
 comprensivi di alcuni bug fixments anche specifici per il Nexus 7, il 13
 Novembre 2012 viene rilasciato Android 4.2 pubblicizzato come “A new flavor
 of Jelly Bean”, che debutta sui dispositivi Nexus 4 e Nexus 10.
 Tra le maggiorni novità la possibilità di collegare display Wi-Fi, l’introduzio
ne del modulo kernel SELinux per la sicurezza e la nuova funzionalità multiutent
e per il momento disponibile solo su dispositivi Tablet.
\end_layout

\begin_layout Paragraph
iOS 6
\end_layout

\begin_layout Standard
L’11 Giugno, ancora una volta durante la Apple Worldwide Developers Conference
 (WWDC) 2012, viene presentata la nuova versione di iOS prevista per il
 rilascio nell’autunno dello stesso anno.
 Infatti, il 19 Settembre 2012 vede la luce la sesta versione del sistem
 operativo Apple iOS 6, disponibile per iPhone 3GS, iPhone 4/4S, iPod Touch
 4G/5G e iPad 2.
 Tra i vari dispositivi non supportati si aggiungono alla lista degli svantaggia
ti anche l’iPhone 3GS, l’iPhone 4 e l’iPod Touch 4G poiché, a causa del
 singolo core, non godone di molte delle novità previste in iOS 6.
 Tra le nuove funzionalità:
\end_layout

\begin_layout Itemize
Siri disponibile anche su dispositivi iPad e iPod Touch
\end_layout

\begin_layout Itemize
Siri disponibile in oltre 10 nuovi linguaggi tra cui l’italiano
\end_layout

\begin_layout Itemize
Eyes-Free, la nuova funzionalità che permette di utilizzare Siri per svolgere
 alcune delle attività più classiche spesso necessarie quando si è alla
 guida, viene reso disponibile per e compatibile per Audi, Toyota e Honda
\end_layout

\begin_layout Itemize
Siri si integra con Facebook e Twitter
\end_layout

\begin_layout Itemize
Facebook profondamente integrato nel sistema operativo, come era già stato
 fatto per Twitter
\end_layout

\begin_layout Itemize
Maps completamente indipendente al posto di Google Maps, grazie anche al
 contributo di TomTom
\end_layout

\begin_layout Itemize
Telefonate FaceTime supportate anche in rete 3G
\end_layout

\begin_layout Itemize
Safari supporta le tabs iCloud e la reading list offline
\end_layout

\begin_layout Itemize
Integrato il supporto ad Adobe Flash Player per supporti con processore
 A5+
\end_layout

\begin_layout Standard
Altri aggiornamenti e miligorire riguardano lo Store, il Game Center, il
 Calendar, l’orologio e la sicurezza, da sempre un fiore all’occhiello dei
 dispositivi e dei sistemi operativi a marchio Apple.
\end_layout

\begin_layout Paragraph
Windows Phone 8
\end_layout

\begin_layout Standard
Forte dei discorsi fatti per Microsoft relativamente al fast-development
 effettuato per Windows Phone 7.x, il 29 Ottobre 2012 viene rilasciato Windows
 Phone 8 la seconda generazione del sistema operativo Microsoft della serie
 Windows Phone che, come il suo predecessore, vede l’interfaccia grafica
 conosciuta come Modern UI o Metro.
\end_layout

\begin_layout Standard
La grande novità di Windows Phone 8 è che l’architettura su base CE viene
 completamente sostituita dalla nuova architettura su base Windows NT kernel
 riscontrabile nella maggior parte delle componenti di Windows 8.
 Anche a causa di ciò, però, risulta impossibile aggiornare a Windows Phone
 8 per i possessori di Windows Phone 7.x e le nuove applicazioni specifiche
 per Windows Phone 8 non sono disponibile per le versioni più vecchie, anche
 se è possibile per gli sviluppatori rendere pubbliche le proprie applicazioni
 per ambo i supporti.
\end_layout

\begin_layout Standard
I dispositivi Windows Phone 8 sono prodotti da Nokia, HTC, Samsung e Huawei.
 Tra le nuove funzionalità e i nuovi supporti introdotti da Windows Phone
 8: - Supporto al multi-core fino a 64 core - Introdotto il supporto alle
 MicroSD utilizzate per aggiungere spazio di archiviazione - Supporto ad
 NTFS - Internet Explorer 10 fornito di default con interfaccia grafica
 semplificata rispetto a IE9 - Multitasking reale che apre le porte ad un
 nuovo livello di potenzialità per le app in background - Driving Mode,
 interfaccia grafica specifica e semplificata da utilizzare mentre si è
 alla guida - Kids Corner, una sorta di guest-mode per permettere l’accesso
 a giochi e applicazioni selezionate preventivamente senza modificare i
 dati dell’utente principale - NFC e Wallet, per permettere lo scambio di
 dati tra dispositivi mobili e desktop con Windows 8 e Windows Phone 8.
\end_layout

\begin_layout Standard
Poiché Windows Phone 8 è stato pensato in termini di dispositivo MTP multimedial
e in termini di audio e video, Windows Media Player e Internet Explorer
 permettono di trasferire musica, video e altri files multimediali, attività
 possibile anche tra dispositivi Windows Phone 8 e Windows 8 grazie ad un’applic
azione specifica per lo scambio dati, disponibile anche per OS X e Windows
 Desktop.
\end_layout

\begin_layout Standard
Purtroppo, a grande discapito di questi dispositivi, il numero di applicazioni
 disponibili rimane molto ridotto se comparato ai grandi competitor di Google
 e Apple.
\end_layout

\begin_layout Paragraph
Tizen
\end_layout

\begin_layout Standard
Nelle precedenti sezioni abbiamo citato questo sistema operativo open-source
 dell’associazione formata da Linux Foundation, Samsung e Intel, rilasciato
 per la prima volta il 5 Gennaio del 2012, a causa del fatto nasce sulla
 base di MeeGo e LiMo e si sviluppa anche grazie a Bada.
 Dalle ceneri di questi sistemi operativi nasce quindi un nuovo sistema
 per smartphones, tablets, smart TVs, smart cameras e in-vehicle infotainment.
\end_layout

\begin_layout Standard
L’architettura è a kernel monolitico, per piattaforme ARM e x86, e il package
 manager gestisce pacchetti RPM.
 I linguaggi di programmazione supportati sono C, C++ e HTML5; le app in
 HTML5 funzionano senza l’ausilio di un browser, come del resto anche su
 Firefox OS, Ubuntu Touch (che vedremo in seguito) e webOS.
\end_layout

\begin_layout Standard
La direzione dello sviluppo, per quanto riguarda la direzione da seguire
 e le strategie, è lasciata ad una commissione nata dalle ceneri della LiMo
 Foundation e denominata Tizen Foundation, composta da membri di Samsung,
 Intel, Huawei, Fujitsu, NEC, Panasonic, KT, Sprint, SK Telecom, Orange,
 NTT Docomo e Vodafone.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename assets/Mer_and_mobile_operating_systems.svg
	width 75text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
L'evoluzione dei sistemi operativi che hanno contribuito alla nascita di
 Tizen
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
2013
\end_layout

\begin_layout Paragraph
iOS 7
\end_layout

\begin_layout Standard
“Capace di grandi cose.
 E di tutte le piccole cose quotidiane, naturalmente.”, questo lo slogan
 (tradotto quasi letteralmente) della presentazione di iOS 7, la settima
 release del sistema operativo mobile della Apple, presentata alla WWDC
 il 10 Giugno e rilasciata il 18 Settembre 2013.
 Stando ai dati di Mashable pare che alla fine del 2013 iOS 7 sia stato
 installato sul 74% dei dispositivi che lo supportano, ossia iPhone 4/4S,
 iPhone 5/5C/5S, iPod Touch 5G, iPad 2, iPad Air e iPad mini.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename assets/io7_share.png
	width 35text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Share di iOS 7, iOS 6 e precedenti
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La miglioria sostanziale riguarda l’interfaccia grafica, semplice e minimalista,
 praticamente ridisegnata allo scopo di semplificare al massimo l’esperienza
 utente e renderla pià utile e divertente.
 Stando alle dichiarazioni della stessa Apple, il design ottimale è solo
 il fiore all’occhiello di una serie di funzionalità ottimali orientate
 al funzionamento del dispositivo e delle app in esso integrate.
\end_layout

\begin_layout Standard
Anche la maggior parte delle icone sono state ridisegnate allo scopo di
 rispecchiare il concetto di semplicità e minimalità che si rileva in tutto
 il sistema, privo di decorazioni, semplicemente con le cose giuste al posto
 giusto solo quando sono necessarie.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename assets/apple_icons.jpg
	lyxscale 35
	width 35text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Home di iOS 7 su iPhone
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Analizziamo nel dettaglio le nuove integrazioni funzionali di questo sistema
 operativo molto promettente, sia sulla carta che nella pratica:
\end_layout

\begin_layout Itemize
Control Center, il pannello di controllo con tutte le impostazioni che richiedon
o di essere a portata di mano.
 Allo stesso modo in cui si accede al pannello di notifica con una gesture
 di swipe dall’alto verso il basso, è possibile accedere a questo pannello
 con una gesture di swipe contraria, effettuata nella parte bassa dello
 schermo, da partire da qualsiasi schermata, anche quella di blocco.
 Oltre alle impostazioni più comuni sono disponibili accessi veloci a Flash,
 Clock, Calculator e Camera.
\end_layout

\begin_layout Itemize
Notification Center, simile a quello presente sui dispositivi Android e
 attivabile con la medesima gesture.
 E’ suddiviso in tre sezioni, quella complessiva di tutte le notifiche,
 quella con le sole notifiche perse (non osservate) ed una nuova sezione
 denominata “Today” con le notifiche del giorno.
 Anche questo pannello è accessibile da ogni schermata, anche quella di
 blocco.
\end_layout

\begin_layout Itemize
Multitasking, la nota funzionalità già discussa precedentemente diventa
 intelligente.
 Praticamente l’algoritmo cerca di memorizzare e interpretare le azioni
 più comuni dell’utente in modo da poter auspicare a quali azioni sta per
 compiere e fornire contenuti aggiornati prima ancora che si passi da un’applica
zione all’altra, in modo da ridurre al minimo i tempi di attesa.
 Per chiarire ancora una volta ogni ambiguità, stiamo parlando del meglio
 definito come fast app-switching, ossia una sorta di finto multitasking.
\end_layout

\begin_layout Itemize
Camera, l’app per la gestione della fotocamera sul retro e di quella frontale.
 Con iOS vengono anzitutto introdotte nuove tipologie di scatto e modalità
 per i video che rendono il pacchetto unico; tra le tipologie abbiamo Slo-mo,
 Video normale, Photo normale, Square (foto quadrata), Pano (foto panoramica).
 Sono presenti inoltre una decina di filtri per rendere le foto uniche,
 tra cui Mono, Tonal, Noir, Fade, Chrome, Process, Transfer e Instant.
\end_layout

\begin_layout Itemize
Photo, l’archivio multimediale di tutti gli scatti che è stato suddiviso
 in più categorie a seconda dell’annata o del posto in cui sono state scattate
 se sono presenti informazioni di geolocalizzazione.
 Grazie alla gestione a miniature è possibile recuperare una foto o un video
 scattata ovunque e anche molto vecchia in pochissimo tempo.
\end_layout

\begin_layout Itemize
AirDrop, il più comodo e veloce sistema per condividere qualsiasi cosa su
 iPhone.
 Consiste in un tasto di condivisione rapida per foto, video e contatti
 con chiunque, tramite Bluetooth e Wi-Fi, in maniera completamente automatizzata.
 E’ necessario solamente decidere cosa condividere e con chi.
\end_layout

\begin_layout Itemize
Siri, il noto sistema di riconoscimento vocale “onniscente” cambia look
 e si potenzia con iOS 7.
 E’ stato ottimizzato soprattutto grazie al fatto che le nuove voci sono
 più facilmente comprensibili, in secondo luogo ha più fonti a disposizione
 tra cui reperire le informazioni ed una maggior velocità di risposta.
\end_layout

\begin_layout Itemize
Apps Near Me, la nuova funzionalità integrata nell’App Store.
 Praticamente mostra una collezione delle app più popolari in base alla
 posizione in cui ci si trova quindi, teoricamente, quelle a cui probabilmente
 l’utente è più interessato nel momento corrente.
 Inoltre, con iOS 7, gli aggiornamenti alle app vengono effettuati automaticamen
te in background.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename assets/appstore_popular_screen.jpg
	width 35text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Apple Store su iPhone con iOS 7; schermata Popular Near Me
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
iOS in the Car, un sistema che si interfaccia con un supporto integrabile
 nelle automobili che permette di utilizzare determinati controlli grazie
 al collegamento del dispositivo iOS 7 con l’automobile e Siri Eyes Free,
 come effettuare telefonate, ricevere ed inviare sms e navigare.
\end_layout

\begin_layout Paragraph
Firefox OS e Chrome OS
\end_layout

\begin_layout Standard
Il 2013 è l’anno in cui, nel bene o nel male, si è sentito parlare maggiormente
 di Chrome OS, una nuova tipologia di sistema operativo dedicato a chi soddisfa
 tutte le proprie necessità al computer grazie a servizi e applicazioni
 web.
 Chrome OS, versione brandizzata del sistema operativo open-source Chromium
 OS, viene montato sui cosidetti Chromebook, laptops con pochissima memoria
 interna e pochissime applicazioni: sostanzialmente consiste in un Web Browser
 (una versione di Chrome), un Media Player e un File System.
\end_layout

\begin_layout Standard
Ci sono molti buoni motivi per cui un Chromebook è la soluzione ideale per
 molti utilizzatori della rete e i principali e più risonanti motivi in
 rete sono i seguenti: 
\end_layout

\begin_layout Itemize
Economicità
\end_layout

\begin_layout Itemize
Online Free Storage (Google Drive)
\end_layout

\begin_layout Itemize
Free Web App che possono essere eseguite anche Offline (Chrome Web Store)
\end_layout

\begin_layout Itemize
Velocità d’avvio impareggiabile, meno di 10 secondi per quelli con SSD
\end_layout

\begin_layout Itemize
Aggiornamenti Automatici
\end_layout

\begin_layout Itemize
Assenza di virus
\end_layout

\begin_layout Standard
Naturalmente, in questo panorama, vengono a mancare tutte le applicazioni
 stand-alone a cui siamo abituati e, soprattutto, per chi non fosse familiare
 la suite di strumenti di Google, è un mondo completamente nuovo.
\end_layout

\begin_layout Standard
Il 23 Aprile 2013 viene rilasciato per la prima volta Mozilla Firefox OS,
 un sistema operativo open-source a kernel monolitico per piattaforme ARM,
 programmato in C++, HTML5, CSS e JavaScript.
 Per quanto possa esserci un’assonanza in questo caso non stiamo parlando
 di un sistema operativo con un browser come sistema di navigazione principale,
 bensì un sistema operativo in tutto e per tutto, basato su tecnologie abitualme
nte utilizzate sul web.
\end_layout

\begin_layout Standard
L’obiettivo è quello di produrre un sistema operativo completamente open-source
 per smartphones e tablet, in grado di essere considerato come valida alternativ
a a molti sistemi proprietari come Apple iOS, Google Chrome OS e Microsoft
 Windows Phone e non proprietari come Android, Jolla Sailfish OS e Ubuntu
 Touch.
\end_layout

\begin_layout Standard
Attualmente Firefox OS è compatibile con una serie di device tra cui PandaBoard,
 Desktop Computers, Nexus S, Nexus S 4G, Samsung Galaxy S2 e Galaxy Nexus.
 Un dipendente Nokia ha dimostrato che funziona anche sul recente Raspberry
 PI.
\end_layout

\begin_layout Standard
Tecnologicamente parlando è composto da tre strati fondamentali:
\end_layout

\begin_layout Itemize
Gonk, un kernel Linux e un layer di astrazione hardoware
\end_layout

\begin_layout Itemize
Gecko, il noto layout engine e application services provider
\end_layout

\begin_layout Itemize
Gaia, un layer di interfaccia grafica HTML5
\end_layout

\begin_layout Standard
Il 3 Luglio 2013 viene rilasciata l’ultima versine del supporto per sviluppatori
, il Firefox OS Simulator 4.0, con alcune interessanti novità tra cui una
 nuova dashboard dalla quale gestire tutte le applicazioni sviluppate e
 il cosidetto Remote CSS Styling, un sistema che permette allo sviluppatore
 di modificare il CSS dell’app e visualizzare direttamente nell’emulatore
 le modifiche effettuate senza necessità di far ripartire l’app.
\end_layout

\begin_layout Paragraph
Nexus 5 e Android 4.4 KitKat
\end_layout

\begin_layout Standard
Sicuramente in ambito mobile il 2013 è stato l’anno del Nexus 5 in quanto
 a diffusione mondiale e specialmente in Italia, dove si è rapidamente diffuso
 grazie al fatto che per la prima volta è stato possibile acquistare un
 dispositivo altamente competitivo in quanto a performance, ad un prezzo
 molto competitivo in termini di economicità; infatti, questo nuovo smartphone
 a marchio Google, è disponibile per l’acquisto su Google Play a soli 349€
 nella versione con 16 GB di memoria e a 399€ nella versione con 32 GB.
\end_layout

\begin_layout Standard
Le caratteristiche che lo equiparano fondamentalmente a un device di fascia
 alta sono principalmente il processore, un 4-core a 2.3GHz, una ram da 2GB
 e il supporto NFC, oltre al fatto che viene venduto con Android 4.4 KitKat
 pre-installato.
\end_layout

\begin_layout Standard
Android 4.4 KitKat, nonché l’ultima versione del sistema operativa del sistema
 operativo di Google, rilasciata il 31 Ottobre 2013, ha visto il proprio
 debutto proprio sul Google Nexus 5.
 Il minimo richiesto per quanto riguarda la RAM è 512 MB.
 Tra le maggiori novità è evidente un forte rinnovo per quanto riguarda
 l’interfaccia grafica, performance notevolmente migliorate e una serie
 di nuove funzionalità.
\end_layout

\begin_layout Standard
La prima grande novità, che fa da fiore all’occhiello alla presentazione
 del dispositivo, è la forte integrazione della funzionalità “Ok Google”
 vista e rivista nelle anteprime dei Google Glasses, di cui parleremo tra
 poco.
 Il concetto è quello di poter compiere le principali azioni senza dover
 toccare il dispositivo, semplicemente dalla schermata principale è sufficiente
 pronunciare le parole “Ok Google” seguite da un comando vocale per effettuare
 una ricerca, inviare un messaggio di testo, riprodurre musica o ottenere
 indicazioni stradali.
\end_layout

\begin_layout Standard
La funzionalità fast app-switching (detta multitasking) è stata resa più
 performante per rendere pià responsivi e accurati i touch sul display,
 così come è stata ottimizzata la memoria per poter riprodurre la musica
 mentre si sta navigando col browser senza dover assistere ad alcun rallentament
o.
\end_layout

\begin_layout Standard
Come già visto per iOS 7, anche nel caso di Android 4.4 le parole chiave
 sono semplicità e pulizia in ogni angolo del sistema operativo, allo scopo
 di rendere l’esperienza utente sempre più gradevole e funzionale.
 Ogni applicazione è rivista in quest’ottica, ad esempio la rubrica contatti
 che assegna priorità alle persone con cui l’utente interagisce più frequentemen
te.
\end_layout

\begin_layout Standard
L’integrazione tra le varie funzionalità è percepibile un po’ ovunque: la
 messaggistica non è più suddivisa tra le varie app ma tutta nello stesso
 posto, SMS e Hangouts sono sistemi differenti all’interno della medesima
 interfaccia, le telefonate da un numero sconosciuto subiscono un tentativo
 di riconoscimento del chiamante grazie ad una serie di attività memorizzate
 sulle quali si cerca di carpirne il nome, la lettura dei libri in modalità
 fullscreen permette la completa immersione nell’attività stessa di lettura
 come se si stesse leggendo un libro, anche le Emoji emoticons sono state
 integrate direttamente nella tastiera per averle a disposizione ovunque,
 anche nelle emails.
\end_layout

\begin_layout Standard
A seguire l’integrazione con Google Drive per lo storage e per la sezione
 Documents con tutta la suite di web app dedicate, la possibilità di stampare
 tramite Google Cloud Print e un sacco di altre funzionalità più o meno
 tecniche.
 Attualmente, sotto il punto di vista delle possibilità, dell’elasticità
 e della licenza con cui viene rilasciato, è probabilmente il più adattabile
 a qualsiasi necessità tra i sistemi operativi per smartphones e tablets
 in circolazione.
\end_layout

\begin_layout Section
Conclusioni
\end_layout

\begin_layout Subsection
Nuove fondazioni, sistemi operativi e piattaforme
\end_layout

\begin_layout Standard
Nonostante il percorso analizzato non sia esaustivo a causa della moltitudine
 di sistemi operativi minori, derivati e work-in-progress mai pubblicati
 che esistono sul panorama mondiale dei sistemi operativi in ambito mobile,
 che non comprende solamente smartphones e tablets ma un sacco di altri
 dispositivi tra cui gli in-vehicle/in-car, abbiamo potuto riscontrare come
 sia l’ambiente open-source che quello non open-source abbia in vigore una
 serie di sistemi operativi molto evoluti e al passo coi tempi da sfoggiare
 sui dispositivi più acclamati del momento.
\end_layout

\begin_layout Standard
Tra questi prendono piede anche nuovi dispositivi e sistemi operativi che,
 in qualche modo e ognuno a modo suo, cercano di integrare qualcosa in più
 per poter andare ad aggiungere alla rosa dei dispositivi e sistemi operativi
 al top della gamma.
\end_layout

\begin_layout Paragraph
Jolla
\end_layout

\begin_layout Standard
Ad esempio Jolla Oy, comunemente denominata Jolla Mobile, è un’azienda finlandes
e fondata il 29 Marzo 2011 specializzata in sistemi operativi per dispositivi
 mobile.
 Attualmente sta sviluppando un dispositivo denominato Sailfish OS che altro
 non è che un derivato di due progetti open-source quali MeeGo e Mer.
 Stando a quanto dichiarato, inoltre, i dispositivi Jolla permetteranno
 l’installazione e l’esecuzione della maggior parte delle applicazioni Android.
\end_layout

\begin_layout Paragraph
Ubuntu Touch
\end_layout

\begin_layout Standard
Parallelamente anche Canonical, l’azienda inglese nota per lo sviluppo e
 il mantenimento del sistema operativo per desktop Ubuntu, ha in cantiere
 un progetto denominato Ubuntu Touch orientato principalmente ai dispositivi
 smartphones e tablets.
 Il 31 Ottobre 2011, Mark Shuttleworth ha dichiarato che a partire dalla
 versione 14.04, che verrà rilasciata nell’Aprile del 2014, Ubuntu supporterà
 anche smartphones, tablets, TVs e smart screens.
 La Developer Preview di Ubuntu Touch è stata rilasciata il 21 Febbraio
 2013.
\end_layout

\begin_layout Standard
Il sistema utilizza una grande quantità di software sviluppati inizialmente
 per MeeGo e e Maemo e supporta anche i kernel Linux utilizzati per Android,
 il che renderà molto più semplice portare il sistema operativo di Canonical
 su dispositivi nati per supportare Android.
 La principale peculiarità di questo sistema operativo è che, essendo sviluppato
 sulla stessa tecnologia della versione desktop, potrà cambiare completmente
 aspetto nel momento in cui venisse adagiato nella propria dock station,
 o comunque cambiare interfaccia quando collegato ad un monitor esterno.
\end_layout

\begin_layout Standard
I sistemi con questa tipologia di peculiarità, denominati “superphone” e
 che supportano la piena convergenza all’aspetto desktop, sono stati pensati
 con una CPU a quattro core su architettura ARM o Intel Atom, 1 GB minimo
 di RAM e 32 GB minimo di memoria flash interna più il supporto ad una SD.
 La versione tablet avrà requisiti ancora maggiori in una versione più semplice
 ed una più complessa, rispettivamente consumer ed enterprise.
\end_layout

\begin_layout Paragraph
Fairphone
\end_layout

\begin_layout Standard
Sul finale del 2013 la fondazione olandese nata nel Marzo del 2011, spedisce
 la prima parte della edizione del dispositivo omonimo riprodotto in soli
 25 mila esemplari venduti in pre-ordine.
 La peculiarità di questo dispositivo è che è stato prodotto esclusivamente
 in condizioni di equità: i minerali, specialmente la Columbite-tantalite,
 provengonoo da miniere che non sono controllate dai signori della guerra
 civile che sta devastando la regione del Congo.
 In altre parole la fondazione si impegna ad utilizzare il più possibile
 componenti provenienti da un commercio equo e solidale e gli sviluppatori
 collaborano con varie organizzazioni no-profit per rispettare più possibile
 l’obiettivo prefissato
\end_layout

\begin_layout Standard
Per quanto riguarda il sistema operativo il dispositivo è stavo rilasciato
 con Android 4.2 Jelly Bean con supporto dual-sim poiché il più maturo e
 aperto in circolazione, ma viene data libertà totale di effettuare operazioni
 di root e, in futuro, verrà garantito il supporto con alcuni dispositivi
 trattati in precedenza quali Firefox OS, Ubuntu Touch e Jolla.
\end_layout

\begin_layout Subsection
Nuove frontiere, 
\begin_inset Quotes eld
\end_inset

wearable
\begin_inset Quotes erd
\end_inset

 e il futuro del portabile
\end_layout

\begin_layout Paragraph
Wearable
\end_layout

\begin_layout Standard
Ogni giorno che passa ci avviciniamo e ci addentriamo sempre più a fondo
 in un ecosistema nuovo dove al centro dell’attenzione si trovano i dispositivi
 mobile, non solo smartphones e tablets ma computers dual-os che diventano
 tablet, orologi integrati con lo smartphones, occhialini per la realtà
 aumentata, in-vehicle assistants e molto altro.
 Siamo nell’era del wearable, ossia caratterizzata dai dispositivi indossabili
 che rendono possibile la connessione tra persone e oggetti.
 Grazie a sensori, social networks e applicazioni, si aprono le porte per
 una terza era dei computers dove la realtà aumentata e l’esperienza utente
 nell’ecosistema reale sono al centro di tutto.
\end_layout

\begin_layout Standard
Un esempio per tutti la nota app Runastic, praticamente un motivatore personale
 che tiene traccia di tutta l’attività fisica che viene effettuata.
 Un coach a portata di mano che non è realmente a portata di mano, fintanto
 che è dentro ad uno smartphone.
 Ma quali sarebbero le evoluzioni se potesse, ad esempio, essere integrata
 in un orologio da polso? Non è sicuramente fantascienza, considerato che
 Sony e Samsung producono già da tempo rispettivamente SmartWatch e Galaxy
 Gear, orologi da polso con sistema operativo Android, con i quali è possibile
 rispondere al telefono senza toccare fisicamente lo smartphone, leggere
 le notifiche dei propri social network preferiti e molto altro.
\end_layout

\begin_layout Standard
Il loro vero valore, a detta anche di chi li ha utilizzati e li utilizza
 quotidianamente, è che offrono la possibilità di liberare completamente
 le mani dallo smartphone e permettono di avere una fruizione più naturale
 delle informazioni, anche in mobilità.
\end_layout

\begin_layout Paragraph
Google Glasses
\end_layout

\begin_layout Standard
I Google Glasses sono un ottimo esempio di come questa tecnologia renderà
 più agile la fruizione delle informazioni e l’utilizzo dei dispositivi
 nella quotidianità; con quotidianità si intende anche i momenti in cui
 si stanno vivendo, ad esempio, gli spostamenti in automobile o in scooter.
 Sul display dei Glasses compaiono le notifiche, gli SMS in anteprima e
 le telefonate.
 Pertanto, è possibile essere al corrente di chi ci sta cercando, nel caso
 di un SMS sapere anhce in anteprima qual è il contenuto e di rispondere
 ad una telefonata semplicemente ordinandolo con un comando vocale agli
 occhiali.
\end_layout

\begin_layout Standard
La loro diffusione è prevista per il 2014, attualmente è disponibile la
 versione per sviluppatori ad un prezzo che si aggira attorno ai 1500$.
\end_layout

\begin_layout Paragraph
Internet of Things
\end_layout

\begin_layout Standard
Con queste tecnologie abilitanti sotto certi punti di vista e che ci rendono
 sempre più connessi, sotto altri punti di vista, quel che sta accadendo
 è che siamo orientati alla trasformazione dell’essere umano in dispositivo,
 un dispositivo costantemente connesso al mondo virtuale grazie a connessioni
 sempre più umane.
\end_layout

\begin_layout Standard
Questo paradossale connubio inserisce l’essere umano nel contesto dell’Internet
 of Things in maniera naturale, umana e graduale, che ci porterà ad essere
 l’elemento attivo di un ecosistema integrato e connesso senza precedenti
 in quanto a opportunità, funzionalità e erogazione di servizi dall’ambito
 privato a quello professionale, grazie ai quali tempo, spazio e attività
 saranno ottimizzati per ottenere un’esperienza piacevole, naturale e avanzata
 sotto ogni aspetto della vita quotidiana.
\end_layout

\end_body
\end_document
